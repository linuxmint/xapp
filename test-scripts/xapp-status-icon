#!/usr/bin/python3

import gi
gi.require_version('XApp', '1.0')
from gi.repository import XApp
from gi.repository import GLib, GObject
import sys

class App(GObject.Object):

    def __init__(self):
        super(App, self).__init__()
        self.status_icon = XApp.StatusIcon()
        #self.status_icon.set_name("xapp-status-icon") # optional, defaults to program name, not shown to users
        self.status_icon.set_icon_name("folder-symbolic")
        self.status_icon.set_tooltip_text("My tooltip text")
        self.status_icon.set_label("label 1")
        self.counter = 1
        self.status_icon.connect("button-press-event", self.on_button_press)
        self.status_icon.connect("button-release-event", self.on_button_release)

        GLib.timeout_add_seconds(2, self.on_timeout_cb)

    def on_timeout_cb(self):
        self.counter += 1
        self.status_icon.set_label("label %d" % self.counter)
        # self.status_icon.set_visible((self.counter % 2) == 0)
        return True

    def on_button_press(self, status_icon, x, y, button, time, position_type):
        print("Mouse button %d was pressed at %d %d" % (button, x, y))

    def on_button_release(self, status_icon, x, y, button, time, position_type):
        print("Mouse button %d was released at %d %d" % (button, x, y))

if __name__ == '__main__':
    app = App()
    try:
        GLib.MainLoop().run()
    except KeyboardInterrupt:
        pass
    sys.exit(0)
